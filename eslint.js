const typescriptAirbnb = require('eslint-config-airbnb-typescript')
const typescriptEslintPrettier = require('eslint-config-prettier/@typescript-eslint')

module.exports = {
  env: {
    node: true,
    browser: true,
  },
  parser: 'babel-eslint',
  extends: ['airbnb-base', 'airbnb/rules/react', 'prettier', 'prettier/react'],
  plugins: ['prettier', 'json', 'react-hooks'],
  rules: {
    'react/jsx-no-duplicate-props': ['error', { ignoreCase: false }],
    'no-labels': 'off',
    'no-restricted-syntax': ['error', 'WithStatement'],
    camelcase: 'off',
    'react/no-access-state-in-setstate': 'off',
    'no-constant-condition': 'off',
    'import/no-dynamic-require': 'off',
    'import/order': 'off',
    'default-case': 'off',
    'no-throw-literal': 'off',
    'react/no-did-update-set-state': 'off',
    'prefer-const': ['error', { destructuring: 'all' }],
    'prefer-promise-reject-errors': 'off',
    'react/state-in-constructor': 'off',
    'react/sort-comp': 'off',
    'react/static-property-placement': 'off',
    'react/jsx-no-target-blank': 'off',
    'max-classes-per-file': 'off',
    'no-void': 'off',
    'react/no-array-index-key': 'off',
    'react-hooks/exhaustive-deps': 'error',
    'react-hooks/rules-of-hooks': 'error',
    'no-nested-ternary': 'off',
    'lines-between-class-members': 'off',
    'no-plusplus': 'off',
    'global-require': 'off',
    'no-underscore-dangle': 'off',
    'class-methods-use-this': 'off',
    'no-shadow': 'off',
    /** https://github.com/typescript-eslint/typescript-eslint/issues/1116 */
    'no-undef': 'off',
    /** https://github.com/typescript-eslint/typescript-eslint/issues/1090 */
    'no-restricted-globals': 'off',
    'no-console': 'off',
    'no-empty': 'off',
    'react/destructuring-assignment': 'off',
    'prefer-destructuring': 'off',
    'no-param-reassign': 'off',
    'func-names': 'off',
    'import/prefer-default-export': 'off',
    'import/no-cycle': 'off',
    'import/no-extraneous-dependencies': [
      'error',
      {
        devDependencies: [
          '.eslintrc.js',
          'webpack/**/*',
          'server/**/*',
          '**/*.d.ts',
          'jest.config.js',
          'server/utils/**/*',
          'styleguide.config.js',
        ],
      },
    ],
    'spaced-comment': ['error', 'always', { markers: ['/'] }],
    'react/no-unescaped-entities': 'off',
    'react/no-danger': 'off',
    'react/prop-types': 'off',
    'prettier/prettier': 'error',
    'react/jsx-filename-extension': 'off',
    'react/jsx-props-no-spreading': 'off',
    'jsx-a11y/anchor-is-valid': 'off',
    'consistent-return': 'off',
    'react/prefer-stateless-function': 'off',
  },
  settings: {
    'import/parsers': {
      '@typescript-eslint/parser': ['.ts', '.tsx'],
    },
    'import/resolver': {
      typescript: {},
    },
  },
  overrides: [
    {
      files: ['*.ts', '*.tsx'],
      parser: '@typescript-eslint/parser',
      extends: [
        'plugin:@typescript-eslint/recommended',
        'prettier/@typescript-eslint',
      ],
      plugins: ['@typescript-eslint', 'prettier'],
      rules: {
        ...typescriptAirbnb.rules,
        ...typescriptEslintPrettier.rules,
        '@typescript-eslint/ban-ts-ignore': 'off',
        '@typescript-eslint/no-empty-interface': 'off',
        '@typescript-eslint/no-non-null-assertion': 'off',
        '@typescript-eslint/explicit-function-return-type': 'off',
        '@typescript-eslint/lines-between-class-members': 'off',
        '@typescript-eslint/no-explicit-any': 'off',
        '@typescript-eslint/camelcase': 'off',
        // https://github.com/typescript-eslint/typescript-eslint/issues/1104
        // '@typescript-eslint/no-use-before-define': ['error', { variables: false }]
        '@typescript-eslint/no-use-before-define': 'off',
        '@typescript-eslint/no-unused-vars': [
          'error',
          { ignoreRestSiblings: true },
        ],
        'no-useless-constructor': 'off',
        '@typescript-eslint/no-useless-constructor': 'error',
        '@typescript-eslint/no-empty-function': 'off',
        '@typescript-eslint/no-this-alias': 'off',
      },
    },
    {
      files: ['*.json'],
      rules: { 'json/json': 'error' },
    },
  ],
}
